{"version":3,"sources":["components/Digit/index.js","components/Digit/Digit.js","components/Card/index.js","components/Card/Card.js","components/CardList/index.js","components/CardList/CardList.js","components/Rules/index.js","components/Rules/Rules.js","components/Timer/index.js","components/Timer/Timer.js","components/Info/index.js","components/Info/Info.js","components/App/App.js","components/App/index.js","index.js"],"names":["Digit","cardDigit","this","props","className","Component","Card","handleClick","handleTurn","counter","count","getFirst","getSecond","state","turnedOver","isDisabled","body","onClick","setState","console","log","secondOpen","firstOpen","finishCounter","finishCount","PureComponent","CardList","incrementCounter","alert","bgCount","value","digitArray","digitArray1","slice","digitArray2","digitArray3","digitArray4","cardDigits1","map","index","key","cardDigits2","cardDigits3","cardDigits4","Rules","rulesOn","toggleRules","buttonName","Timer","gameStart","mins","secs","timerGo","setInterval","minutes","seconds","Info","App","i","push","sort","a","b","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e50371.chunk.js","sourcesContent":["import Digit from './Digit'\r\nexport default Digit","import React, {Component} from 'react'\r\nimport './style.css'\r\n\r\nexport default class Digit extends Component{\r\n       \r\n    render(){\r\n        const {cardDigit} = this.props\r\n        \r\n        return(\r\n            <div className=\"digit\">{cardDigit}</div>\r\n        )\r\n    }\r\n}","import Card from './Card'\r\nexport default Card","import React, {PureComponent} from 'react'\r\nimport Digit from '../Digit'\r\nimport './style.css'\r\n\r\nexport default class Card extends PureComponent{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            turnedOver: false,\r\n            isDisabled: false\r\n        }\r\n    }\r\n    \r\n    render(){\r\n\r\n        const {cardDigit} = this.props\r\n\r\n        // {counter} на onClick запускает изменение стейта count компонента CardList\r\n\r\n        const body = this.state.isDisabled ? <div className=\"card disabled\"></div> : (this.state.turnedOver ? <div className=\"card on\"><Digit  cardDigit = {cardDigit} /></div> : <div onClick={() => this.handleClick()} className=\"card off\"></div>)\r\n        return(\r\n            <>{body}</>\r\n        )\r\n    }\r\n    \r\n    handleTurn(){\r\n        this.setState({\r\n            turnedOver: !this.state.turnedOver\r\n        })\r\n        console.log(this.props.cardDigit, ' ', this.state.turnedOver)\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.handleTurn()\r\n        this.props.counter()\r\n        if(this.props.count === 0){\r\n            this.props.getFirst(this.props.cardDigit)\r\n        } else if(this.props.count === 1){\r\n            this.props.getSecond(this.props.cardDigit)\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n\r\n    testIt(){\r\n        // console.log(this.props.cardDigit)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {count} = this.props\r\n        if(count >= 3){\r\n            this.setState ({turnedOver: false})\r\n            this.props.counter()\r\n            console.log('count is', count, this.state.turnedOver)\r\n        }else{\r\n            console.log('count is', count)\r\n            return\r\n        }\r\n        if(this.props.cardDigit === this.props.secondOpen && this.props.cardDigit === this.props.firstOpen){\r\n            this.setState({isDisabled: true})\r\n            this.props.finishCounter()\r\n            console.log(\"finish count\", this.props.finishCount)\r\n        }\r\n\r\n        const {finishCount} = this.props\r\n        if(finishCount >= 15 && count >=3){\r\n            this.setState ({\r\n                isDisabled: false,\r\n                turnedOver: false\r\n            })\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n}\r\n\r\n","import CardList from './CardList'\r\nexport default CardList\r\n\r\n","import React, {PureComponent} from 'react'\r\nimport Card from '../Card'\r\nimport './style.css'\r\n\r\nclass CardList extends PureComponent {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            count: 0,\r\n            firstOpen: 88,\r\n            secondOpen: 99,\r\n            finishCount: 0\r\n        }\r\n    }\r\n\r\n    render(){\r\n    const count = this.state.count\r\n\r\n    const {digitArray} = this.props\r\n\r\n    const digitArray1 = digitArray.slice(0,8)\r\n    const digitArray2 = digitArray.slice(8,16)\r\n    const digitArray3 = digitArray.slice(16,24)\r\n    const digitArray4 = digitArray.slice(24)\r\n    \r\n    const cardDigits1 = digitArray1.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} />)\r\n    const cardDigits2 = digitArray2.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} />)\r\n    const cardDigits3 = digitArray3.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} />)\r\n    const cardDigits4 = digitArray4.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} />)\r\n    \r\n    return(\r\n        <div className='card_list' onClick={() => this.bgCount()}>\r\n            <div className='card_line'>\r\n                {cardDigits1}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits2}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits3}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits4}\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\n    incrementCounter = () => {\r\n        if(this.state.count < 3)\r\n            {this.setState({\r\n                count: this.state.count + 1\r\n        })} else{\r\n            this.setState({\r\n                count: 0\r\n            })\r\n        }\r\n        console.log(\"count was\", this.state.count)\r\n    }\r\n\r\n    finishCounter = () => {\r\n        if(this.state.finishCount <15){\r\n            this.setState({\r\n                finishCount: this.state.finishCount + 1\r\n            })\r\n        } else{\r\n            alert('well done')\r\n            this.setState({\r\n                finishCount: 0\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    bgCount = () => {\r\n        if(this.state.count >= 2){\r\n            this.setState({\r\n                count: 3\r\n            })\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n\r\n    getFirst = (value) =>{\r\n        this.setState({firstOpen: value})\r\n    }\r\n    getSecond = (value) =>{\r\n        this.setState({secondOpen: value})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.firstOpen === this.state.secondOpen){\r\n            console.log('yes', this.state.firstOpen, this.state.secondOpen)\r\n        } else{\r\n            console.log('no', this.state.firstOpen, this.state.secondOpen)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CardList","import Rules from './Rules'\r\n\r\nexport default Rules","import React, {Component} from 'react'\r\nimport './style.css'\r\n\r\nexport default class Rules extends Component{\r\n    render(){\r\n        const {rulesOn, toggleRules} = this.props\r\n        const buttonName = rulesOn ? 'Hide rules' : 'How to play'\r\n        return(\r\n            <button className='button' onClick={() => toggleRules()}>{buttonName}</button>\r\n        )\r\n    }\r\n}","import Timer from './Timer'\r\n\r\nexport default Timer","import React, {Component} from 'react'\r\nimport'./style.css'\r\n\r\nexport default class Timer extends Component{\r\n    state = {\r\n        gameStart: false,\r\n        mins: 0,\r\n        secs: 0\r\n    }\r\n    componentDidMount(){\r\n        this.timerGo()\r\n    }\r\n    render(){\r\n        const minutes = this.state.mins < 10 ? \"0\" + this.state.mins : this.state.mins\r\n        const seconds = this.state.secs < 10 ? \"0\" + this.state.secs : this.state.secs\r\n        return(\r\n            <div>\r\n                <h3>Timer</h3>\r\n                <div className='timer-field'>{minutes} : {seconds}</div>\r\n            </div>\r\n        )\r\n    }\r\n    timerGo = () =>{\r\n        setInterval(() => {\r\n            if (this.state.secs >= 59) {\r\n                this.setState({\r\n                    secs: 0,\r\n                    mins: this.state.mins + 1\r\n                })\r\n            } else{\r\n                this.setState({ \r\n                    secs: this.state.secs + 1\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n}","import Info from './Info'\r\nexport default Info","import React, {Component} from 'react'\r\nimport Rules from '../Rules'\r\nimport Timer from '../Timer'\r\nimport './style.css'\r\n\r\nexport default class Info extends Component{\r\n    state = {\r\n        rulesOn: false\r\n    }\r\n    render(){\r\n        const body = this.state.rulesOn ? <div>\r\n        <h3>How to play:</h3>\r\n        <ul>\r\n            <li>choose 2 cards</li>\r\n            <li>remember what they are</li>\r\n            <li>turn them down</li> \r\n            <li>find all pairs</li>\r\n            <li>proftt!</li>\r\n        </ul>\r\n        </div> : \"\"\r\n        return(\r\n            <div className='info_wrapper'>\r\n               <Rules rulesOn={this.state.rulesOn} toggleRules={this.toggleRules}/>\r\n               {body}\r\n               <Timer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleRules = () =>{\r\n        this.setState({rulesOn: !this.state.rulesOn})       \r\n    }\r\n}","import React from 'react';\nimport CardList from '../CardList'\nimport Info from '../Info'\nimport './style.css'\n\nfunction App() {\n  const digitArray = []\n    for (let i = 1; i < 17; i++) {\n        digitArray.push(i)\n    }\n    for (let i = 1; i < 17; i++) {\n        digitArray.push(i)    \n    }\n    digitArray.sort((a, b) => a > b ? Math.random() - 0.5 : -(Math.random() - 0.5))\n    console.log(digitArray)\n\n  return (\n    <div className=\"App\">\n      <Info />\n      <CardList digitArray = {digitArray} />\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}