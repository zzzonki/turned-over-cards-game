{"version":3,"sources":["components/Digit/index.js","components/Digit/Digit.js","components/Card/index.js","components/Card/Card.js","components/CardList/index.js","components/CardList/CardList.js","components/Rules/index.js","components/Rules/Rules.js","components/Timer/index.js","components/Timer/Timer.js","components/Info/index.js","components/Info/Info.js","components/App/index.js","components/App/App.js","index.js"],"names":["Digit","cardDigit","this","props","className","Component","Card","state","turnedOver","isDisabled","handleClick","gameStart","gameStarter","handleTurn","counter","count","getFirst","getSecond","body","onClick","setState","console","log","secondOpen","firstOpen","finishCounter","finishCount","PureComponent","CardList","incrementCounter","alert","bgCount","value","digitArray","digitArray1","slice","digitArray2","digitArray3","digitArray4","cardDigits1","map","index","key","cardDigits2","cardDigits3","cardDigits4","Rules","rulesOn","toggleRules","buttonName","Timer","mins","secs","timerGo","gamePause","timerId","setTimeout","clearTimeout","minutes","seconds","going","Info","display","App","i","push","sort","a","b","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WACeA,G,6KCIF,IACEC,EAAaC,KAAKC,MAAlBF,UAEP,OACI,yBAAKG,UAAU,SAASH,O,GANDI,cCFpBC,G,kNCKXC,MAAQ,CACJC,YAAY,EACZC,YAAY,G,EAsBhBC,YAAc,WAMV,GALI,EAAKP,MAAMQ,WACX,EAAKR,MAAMS,cAEf,EAAKC,aACL,EAAKV,MAAMW,UACa,IAArB,EAAKX,MAAMY,MACV,EAAKZ,MAAMa,SAAS,EAAKb,MAAMF,eAC5B,IAAwB,IAArB,EAAKE,MAAMY,MAGjB,OAFA,EAAKZ,MAAMc,UAAU,EAAKd,MAAMF,a,uDA5B/B,IAAD,OAEGA,EAAaC,KAAKC,MAAlBF,UAIDiB,EAAOhB,KAAKK,MAAME,WAAa,yBAAKL,UAAU,kBAA0BF,KAAKK,MAAMC,WAAa,yBAAKJ,UAAU,WAAU,kBAAC,EAAD,CAAQH,UAAaA,KAAsB,yBAAKkB,QAAS,kBAAM,EAAKT,eAAeN,UAAU,aAC5N,OACI,oCAAGc,K,mCAKPhB,KAAKkB,SAAS,CACVZ,YAAaN,KAAKK,MAAMC,aAE5Ba,QAAQC,IAAIpB,KAAKC,MAAMF,UAAW,IAAKC,KAAKK,MAAMC,c,6EAsBjC,IACVO,EAASb,KAAKC,MAAdY,MACJA,GAAS,GACRb,KAAKkB,SAAU,CAACZ,YAAY,IAC5BN,KAAKC,MAAMW,UACXO,QAAQC,IAAI,WAAYP,EAAOb,KAAKK,MAAMC,YAK3CN,KAAKC,MAAMF,YAAcC,KAAKC,MAAMoB,YAAcrB,KAAKC,MAAMF,YAAcC,KAAKC,MAAMqB,YACrFtB,KAAKkB,SAAS,CAACX,YAAY,IAC3BP,KAAKC,MAAMsB,gBACXJ,QAAQC,IAAI,eAAgBpB,KAAKC,MAAMuB,cAGrBxB,KAAKC,MAApBuB,aACW,IAAMX,GAAQ,GAC5Bb,KAAKkB,SAAU,CACXX,YAAY,EACZD,YAAY,KAbhBa,QAAQC,IAAI,WAAYP,O,GApDFY,kBCHnBC,G,kNCKXrB,MAAQ,CACJQ,MAAO,EACPS,UAAW,GACXD,WAAY,GACZG,YAAa,G,EAuCjBG,iBAAmB,WACZ,EAAKtB,MAAMQ,MAAQ,EACjB,EAAKK,SAAS,CACXL,MAAO,EAAKR,MAAMQ,MAAQ,IAE9B,EAAKK,SAAS,CACVL,MAAO,IAGfM,QAAQC,IAAI,YAAa,EAAKf,MAAMQ,Q,EAGxCU,cAAgB,WACT,EAAKlB,MAAMmB,YAAa,GACvB,EAAKN,SAAS,CACVM,YAAa,EAAKnB,MAAMmB,YAAc,KAG1C,EAAKN,SAAS,CACVM,YAAa,IAEjBI,MAAM,e,EAKdC,QAAU,WACH,EAAKxB,MAAMQ,OAAS,GACnB,EAAKK,SAAS,CACVL,MAAO,K,EAOnBC,SAAW,SAACgB,GACR,EAAKZ,SAAS,CAACI,UAAWQ,K,EAE9Bf,UAAY,SAACe,GACT,EAAKZ,SAAS,CAACG,WAAYS,K,uDA5EtB,IAAD,OACFjB,EAAQb,KAAKK,MAAMQ,MAElBkB,EAAc/B,KAAKC,MAAnB8B,WAEDC,EAAcD,EAAWE,MAAM,EAAE,GACjCC,EAAcH,EAAWE,MAAM,EAAE,IACjCE,EAAcJ,EAAWE,MAAM,GAAG,IAClCG,EAAcL,EAAWE,MAAM,IAE/BI,EAAcL,EAAYM,KAAI,SAACvC,EAAWwC,GAAZ,OACpC,kBAAC,EAAD,CAAMxC,UAAaA,EAAWyC,IAAOD,EAAO1B,MAAOA,EAAOD,QAAW,EAAKe,iBAAkBb,SAAY,EAAKA,SAAUC,UAAa,EAAKA,UAAWO,UAAa,EAAKjB,MAAMiB,UAAWD,WAAc,EAAKhB,MAAMgB,WAAYE,cAAiB,EAAKA,cAAeC,YAAe,EAAKnB,MAAMmB,YAAad,YAAe,EAAKT,MAAMS,YAAaD,UAAa,EAAKR,MAAMQ,eACjWgC,EAAcP,EAAYI,KAAI,SAACvC,EAAWwC,GAAZ,OACpC,kBAAC,EAAD,CAAMxC,UAAaA,EAAWyC,IAAOD,EAAO1B,MAAOA,EAAOD,QAAW,EAAKe,iBAAkBb,SAAY,EAAKA,SAAUC,UAAa,EAAKA,UAAWO,UAAa,EAAKjB,MAAMiB,UAAWD,WAAc,EAAKhB,MAAMgB,WAAYE,cAAiB,EAAKA,cAAeC,YAAe,EAAKnB,MAAMmB,YAAad,YAAe,EAAKT,MAAMS,YAAaD,UAAa,EAAKR,MAAMQ,eACjWiC,EAAcP,EAAYG,KAAI,SAACvC,EAAWwC,GAAZ,OACpC,kBAAC,EAAD,CAAMxC,UAAaA,EAAWyC,IAAOD,EAAO1B,MAAOA,EAAOD,QAAW,EAAKe,iBAAkBb,SAAY,EAAKA,SAAUC,UAAa,EAAKA,UAAWO,UAAa,EAAKjB,MAAMiB,UAAWD,WAAc,EAAKhB,MAAMgB,WAAYE,cAAiB,EAAKA,cAAeC,YAAe,EAAKnB,MAAMmB,YAAad,YAAe,EAAKT,MAAMS,YAAaD,UAAa,EAAKR,MAAMQ,eACjWkC,EAAcP,EAAYE,KAAI,SAACvC,EAAWwC,GAAZ,OACpC,kBAAC,EAAD,CAAMxC,UAAaA,EAAWyC,IAAOD,EAAO1B,MAAOA,EAAOD,QAAW,EAAKe,iBAAkBb,SAAY,EAAKA,SAAUC,UAAa,EAAKA,UAAWO,UAAa,EAAKjB,MAAMiB,UAAWD,WAAc,EAAKhB,MAAMgB,WAAYE,cAAiB,EAAKA,cAAeC,YAAe,EAAKnB,MAAMmB,YAAad,YAAe,EAAKT,MAAMS,YAAaD,UAAa,EAAKR,MAAMQ,eAEvW,OACI,yBAAKP,UAAU,YAAYe,QAAS,kBAAM,EAAKY,YAC3C,yBAAK3B,UAAU,aACVmC,GAEL,yBAAKnC,UAAU,aACVuC,GAEL,yBAAKvC,UAAU,aACVwC,GAEL,yBAAKxC,UAAU,aACVyC,M,2CAiDN3C,KAAKK,MAAMiB,YAActB,KAAKK,MAAMgB,WACnCF,QAAQC,IAAI,MAAOpB,KAAKK,MAAMiB,UAAWtB,KAAKK,MAAMgB,YAEpDF,QAAQC,IAAI,KAAMpB,KAAKK,MAAMiB,UAAWtB,KAAKK,MAAMgB,gB,GA5FxCI,kBCFRmB,G,6KCEF,IAAD,EAC2B5C,KAAKC,MAA7B4C,EADH,EACGA,QAASC,EADZ,EACYA,YACVC,EAAaF,EAAU,aAAe,cAC5C,OACI,4BAAQ3C,UAAU,SAASe,QAAS,kBAAM6B,MAAgBC,O,GALnC5C,cCDpB6C,G,kNCEX3C,MAAQ,CACJ4C,KAAM,EACNC,KAAM,G,EAoCVC,QAAU,WAyBN,EAAKlD,MAAMmD,a,mEA1DM,IAAD,OACbpD,KAAKC,MAAMQ,UACVT,KAAKqD,QAAUC,YAAW,WACjB,EAAKjD,MAAM6C,MAAQ,GACnB,EAAKhC,SAAS,CACVgC,KAAM,EACND,KAAM,EAAK5C,MAAM4C,KAAO,IAG5B,EAAK/B,SAAS,CACVgC,KAAM,EAAK7C,MAAM6C,KAAO,IAGhC/B,QAAQC,IAAI,WAAY,EAAKiC,QAAS,YACvC,MAECE,aAAavD,KAAKqD,SAClBlC,QAAQC,IAAI,WAAYpB,KAAKqD,QAAS,eAE/ClC,QAAQC,IAAIpB,KAAKC,MAAMQ,a,+BAGlB,IAAD,OACE+C,EAAUxD,KAAKK,MAAM4C,KAAO,GAAK,IAAMjD,KAAKK,MAAM4C,KAAOjD,KAAKK,MAAM4C,KACpEQ,EAAUzD,KAAKK,MAAM6C,KAAO,GAAK,IAAMlD,KAAKK,MAAM6C,KAAOlD,KAAKK,MAAM6C,KACpEQ,EAAQ1D,KAAKC,MAAMQ,UAAY,6BAA+B,cACpE,OACI,oCACI,qCACA,yBAAKP,UAAWwD,EAAOzC,QAAS,kBAAM,EAAKkC,YAAYK,EAAvD,MAAmEC,Q,GAnChDhC,kBCFpBkC,G,kNCKXtD,MAAQ,CACJwC,SAAS,G,EA2BbC,YAAc,WACV,EAAK5B,SAAS,CAAC2B,SAAU,EAAKxC,MAAMwC,W,uDAzBpC,IAAM7B,EAAOhB,KAAKK,MAAMwC,QAAU,6BAClC,4CACA,4BACI,8CACA,sDACA,8CACA,8CACA,uDACA,2DACA,yCAEK,GACHe,EAAU5D,KAAKK,MAAMwC,QAAU,SAAW,GAChD,OACI,yBAAK3C,UAAU,gBACX,kBAAC,EAAD,CAAO2C,QAAS7C,KAAKK,MAAMwC,QAASC,YAAa9C,KAAK8C,cACrD9B,EACD,yBAAKd,UAAW0D,GACZ,kBAAC,EAAD,CAAOR,UAAWpD,KAAKC,MAAMmD,UAAW3C,UAAWT,KAAKC,MAAMQ,kB,GAvBhDN,cCJnB0D,G,kNCKbxD,MAAM,CACJI,WAAW,EACXsB,WAAY,I,EA4BdrB,YAAc,WACZ,EAAKQ,SAAS,CACVT,WAAW,K,EAGjB2C,UAAY,WACR,EAAKlC,SAAS,CACVT,WAAW,K,kEA9Bf,IADF,IAAMsB,EAAa,GACR+B,EAAI,EAAGA,EAAI,GAAIA,IACpB/B,EAAWgC,KAAKD,GAEpB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpB/B,EAAWgC,KAAKD,GAEpB/B,EAAWiC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAIC,KAAKC,SAAW,KAAQD,KAAKC,SAAW,OAC1EjD,QAAQC,IAAI,MAAOW,GACnB/B,KAAKkB,SAAS,CACZa,WAAYA,M,+BAMhB,OAFAZ,QAAQC,IAAI,gBAGV,yBAAKlB,UAAU,OACb,kBAAC,EAAD,CAAMkD,UAAWpD,KAAKoD,UAAW3C,UAAWT,KAAKK,MAAMI,YACvD,kBAAC,EAAD,CAAUsB,WAAc/B,KAAKK,MAAM0B,WAAYrB,YAAaV,KAAKU,YAAaD,UAAWT,KAAKK,MAAMI,iB,GA1B1FN,cCDlBkE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.87a6559c.chunk.js","sourcesContent":["import Digit from './Digit'\r\nexport default Digit","import React, {Component} from 'react'\r\nimport './style.css'\r\n\r\nexport default class Digit extends Component{\r\n       \r\n    render(){\r\n        const {cardDigit} = this.props\r\n        \r\n        return(\r\n            <div className=\"digit\">{cardDigit}</div>\r\n        )\r\n    }\r\n}","import Card from './Card'\r\nexport default Card","import React, {PureComponent} from 'react'\r\nimport Digit from '../Digit'\r\nimport './style.scss'\r\n\r\nexport default class Card extends PureComponent{\r\n    \r\n    state = {\r\n        turnedOver: false,\r\n        isDisabled: false\r\n    }\r\n    \r\n    render(){\r\n\r\n        const {cardDigit} = this.props\r\n\r\n        // {counter} на onClick запускает изменение стейта count компонента CardList\r\n\r\n        const body = this.state.isDisabled ? <div className=\"card disabled\"></div> : (this.state.turnedOver ? <div className=\"card on\"><Digit  cardDigit = {cardDigit} /></div> : <div onClick={() => this.handleClick()} className=\"card off\"></div>)\r\n        return(\r\n            <>{body}</>\r\n        )\r\n    }\r\n    \r\n    handleTurn(){\r\n        this.setState({\r\n            turnedOver: !this.state.turnedOver\r\n        })\r\n        console.log(this.props.cardDigit, ' ', this.state.turnedOver)\r\n    }\r\n\r\n    handleClick = () => {\r\n        if(!this.props.gameStart){\r\n            this.props.gameStarter()\r\n        }\r\n        this.handleTurn()\r\n        this.props.counter()\r\n        if(this.props.count === 0){\r\n            this.props.getFirst(this.props.cardDigit)\r\n        } else if(this.props.count === 1){\r\n            this.props.getSecond(this.props.cardDigit)\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n\r\n    testIt(){\r\n        // console.log(this.props.cardDigit)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {count} = this.props\r\n        if(count >= 3){\r\n            this.setState ({turnedOver: false})\r\n            this.props.counter()\r\n            console.log('count is', count, this.state.turnedOver)\r\n        }else{\r\n            console.log('count is', count)\r\n            return\r\n        }\r\n        if(this.props.cardDigit === this.props.secondOpen && this.props.cardDigit === this.props.firstOpen){\r\n            this.setState({isDisabled: true})\r\n            this.props.finishCounter()\r\n            console.log(\"finish count\", this.props.finishCount)\r\n        }\r\n\r\n        const {finishCount} = this.props\r\n        if(finishCount >= 15 && count >=3){\r\n            this.setState ({\r\n                isDisabled: false,\r\n                turnedOver: false\r\n            })\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n}\r\n\r\n","import CardList from './CardList'\r\nexport default CardList\r\n\r\n","import React, {PureComponent} from 'react'\r\nimport Card from '../Card'\r\nimport './style.css'\r\n\r\nclass CardList extends PureComponent {\r\n\r\n    state = {\r\n        count: 0,\r\n        firstOpen: 88,\r\n        secondOpen: 99,\r\n        finishCount: 0\r\n    }\r\n\r\n    render(){\r\n    const count = this.state.count\r\n\r\n    const {digitArray} = this.props\r\n\r\n    const digitArray1 = digitArray.slice(0,8)\r\n    const digitArray2 = digitArray.slice(8,16)\r\n    const digitArray3 = digitArray.slice(16,24)\r\n    const digitArray4 = digitArray.slice(24)\r\n    \r\n    const cardDigits1 = digitArray1.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} gameStarter = {this.props.gameStarter} gameStart = {this.props.gameStart} />)\r\n    const cardDigits2 = digitArray2.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} gameStarter = {this.props.gameStarter} gameStart = {this.props.gameStart} />)\r\n    const cardDigits3 = digitArray3.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} gameStarter = {this.props.gameStarter} gameStart = {this.props.gameStart} />)\r\n    const cardDigits4 = digitArray4.map((cardDigit, index) =>\r\n    <Card cardDigit = {cardDigit} key = {index} count={count} counter = {this.incrementCounter} getFirst = {this.getFirst} getSecond = {this.getSecond} firstOpen = {this.state.firstOpen} secondOpen = {this.state.secondOpen} finishCounter = {this.finishCounter} finishCount = {this.state.finishCount} gameStarter = {this.props.gameStarter} gameStart = {this.props.gameStart} />)\r\n    \r\n    return(\r\n        <div className='card_list' onClick={() => this.bgCount()}>\r\n            <div className='card_line'>\r\n                {cardDigits1}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits2}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits3}\r\n            </div>\r\n            <div className='card_line'>\r\n                {cardDigits4}\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\n    incrementCounter = () => {\r\n        if(this.state.count < 3)\r\n            {this.setState({\r\n                count: this.state.count + 1\r\n        })} else{\r\n            this.setState({\r\n                count: 0\r\n            })\r\n        }\r\n        console.log(\"count was\", this.state.count)\r\n    }\r\n\r\n    finishCounter = () => {\r\n        if(this.state.finishCount <15){\r\n            this.setState({\r\n                finishCount: this.state.finishCount + 1\r\n            })\r\n        } else{\r\n            this.setState({\r\n                finishCount: 0\r\n            })\r\n            alert('well done')\r\n        }\r\n\r\n    }\r\n\r\n    bgCount = () => {\r\n        if(this.state.count >= 2){\r\n            this.setState({\r\n                count: 3\r\n            })\r\n        } else{\r\n            return\r\n        }\r\n    }\r\n\r\n    getFirst = (value) =>{\r\n        this.setState({firstOpen: value})\r\n    }\r\n    getSecond = (value) =>{\r\n        this.setState({secondOpen: value})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.firstOpen === this.state.secondOpen){\r\n            console.log('yes', this.state.firstOpen, this.state.secondOpen)\r\n        } else{\r\n            console.log('no', this.state.firstOpen, this.state.secondOpen)\r\n        }\r\n    }\r\n}\r\n\r\nexport default CardList","import Rules from './Rules'\r\n\r\nexport default Rules","import React, {Component} from 'react'\r\nimport './style.scss'\r\n\r\nexport default class Rules extends Component{\r\n    render(){\r\n        const {rulesOn, toggleRules} = this.props\r\n        const buttonName = rulesOn ? 'Hide rules' : 'How to play'\r\n        return(\r\n            <button className='button' onClick={() => toggleRules()}>{buttonName}</button>\r\n        )\r\n    }\r\n}","import Timer from './Timer'\r\n\r\nexport default Timer","import React, {PureComponent} from 'react'\r\nimport'./style.scss'\r\n\r\nexport default class Timer extends PureComponent{\r\n    state = {\r\n        mins: 0,\r\n        secs: 0\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.gameStart){\r\n            this.timerId = setTimeout(() => {\r\n                 if (this.state.secs >= 59) {\r\n                     this.setState({\r\n                         secs: 0,\r\n                         mins: this.state.mins + 1\r\n                     })\r\n                 } else{\r\n                     this.setState({ \r\n                         secs: this.state.secs + 1\r\n                     })\r\n                 }\r\n                 console.log('interval', this.timerId, 'is set')\r\n             }, 1000)\r\n             } else{\r\n                 clearTimeout(this.timerId)\r\n                 console.log('interval', this.timerId, 'is cleared')\r\n             }\r\n        console.log(this.props.gameStart)\r\n    }\r\n\r\n    render(){\r\n        const minutes = this.state.mins < 10 ? \"0\" + this.state.mins : this.state.mins\r\n        const seconds = this.state.secs < 10 ? \"0\" + this.state.secs : this.state.secs\r\n        const going = this.props.gameStart ? 'timer-field timer-field_go' : 'timer-field'\r\n        return(\r\n            <>\r\n                <h3>Timer</h3>\r\n                <div className={going} onClick={() => this.timerGo()}>{minutes} : {seconds}</div>\r\n            </> \r\n        )\r\n    }\r\n    timerGo = () =>{\r\n        // this.setState({\r\n        //     gameStart: !this.state.gameStart\r\n        // })\r\n        // setTimeout(() => {\r\n        //     if(this.state.gameStart){\r\n        //        this.timerId = setInterval(() => {\r\n        //             if (this.state.secs >= 59) {\r\n        //                 this.setState({\r\n        //                     secs: 0,\r\n        //                     mins: this.state.mins + 1\r\n        //                 })\r\n        //             } else{\r\n        //                 this.setState({ \r\n        //                     secs: this.state.secs + 1\r\n        //                 })\r\n        //             }\r\n        //             console.log('interval', this.timerId, 'is set')\r\n        //         }, 1000)\r\n        //         } else{\r\n        //             clearInterval(this.timerId)\r\n        //             console.log('interval', this.timerId, 'is cleared')\r\n        //         }\r\n        // }, 1);\r\n\r\n        this.props.gamePause()\r\n        \r\n        \r\n    }\r\n    \r\n}","import Info from './Info'\r\nexport default Info","import React, {Component} from 'react'\r\nimport Rules from '../Rules'\r\nimport Timer from '../Timer'\r\nimport './style.scss'\r\n\r\nexport default class Info extends Component{\r\n    state = {\r\n        rulesOn: false\r\n    }\r\n    render(){\r\n        const body = this.state.rulesOn ? <div>\r\n        <h3>How to play:</h3>\r\n        <ul>\r\n            <li>choose 2 cards</li>\r\n            <li>remember what they are</li>\r\n            <li>turn them down</li> \r\n            <li>find all pairs</li>\r\n            <li>click on timer to pause</li>\r\n            <li>click on any card to resume</li>\r\n            <li>proftt!</li>\r\n        </ul>\r\n        </div> : \"\"\r\n        const display = this.state.rulesOn ? \"hidden\" : \"\"\r\n        return(\r\n            <div className='info_wrapper'>\r\n                <Rules rulesOn={this.state.rulesOn} toggleRules={this.toggleRules}/>\r\n                {body}\r\n                <div className={display}>\r\n                    <Timer gamePause={this.props.gamePause} gameStart={this.props.gameStart} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleRules = () =>{\r\n        this.setState({rulesOn: !this.state.rulesOn})       \r\n    }\r\n}","import App from './App';\r\nexport default App","import React, {Component} from 'react';\nimport CardList from '../CardList'\nimport Info from '../Info'\nimport './style.css'\n\nclass App extends Component{\n  state={\n    gameStart: false,\n    digitArray: []\n  }\n\n  componentDidMount(){\n    const digitArray = []\n      for (let i = 1; i < 17; i++) {\n          digitArray.push(i)\n      }\n      for (let i = 1; i < 17; i++) {\n          digitArray.push(i)    \n      }\n      digitArray.sort((a, b) => a > b ? Math.random() - 0.5 : -(Math.random() - 0.5))\n      console.log('app', digitArray)\n      this.setState({\n        digitArray: digitArray\n      })\n  }\n  render(){\n    console.log('app rendered')\n\n    return (\n      <div className=\"App\">\n        <Info gamePause={this.gamePause} gameStart={this.state.gameStart} />\n        <CardList digitArray = {this.state.digitArray} gameStarter={this.gameStarter} gameStart={this.state.gameStart} />\n      </div>\n    )\n  }\n\n  gameStarter = () =>{\n    this.setState({\n        gameStart: true\n    })\n  }\n  gamePause = () =>{\n      this.setState({\n          gameStart: false\n      })\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}